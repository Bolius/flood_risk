name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_SIZE: 800

    steps:
      - uses: actions/checkout@v2.3.1
      - name: Build image
        run: docker build -t flood_risk .
      - name: Install packages
      - name: Run tests
        run: docker run \
          -e KORTFORSYNINGEN=${{ secrets.KORTFORSYNINGEN }} \
          -e GEO_KEY=${{ secrets.GEO_KEY }} \
          -e IMAGE_SIZE=800 \
          flood_risk pipenv run python -m unittest
      - name: Creating coverage
        run: docker run \
          -e KORTFORSYNINGEN=${{ secrets.KORTFORSYNINGEN }} \
          -e GEO_KEY=${{ secrets.GEO_KEY }} \
          -e IMAGE_SIZE=800 \
          flood_risk pipenv run coverage run --source=. -m unittest
      #pipenv install --deploy
      - name: Uploading Coverage
        run: docker run  \
          -e COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }} \
          flood_risk pipenv run coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: Checking black
        run: docker run flood_risk pipenv run black --check .
      - name: Checking Flake8
        run: docker run flood_risk pipenv run flake8 --max-complexity 8 .
