import os
import sys

import numpy as np

# A file with the constants such as colors etc. # Config vars below
HOLLOWING_COLOR = [np.uint8(n) for n in [1, 1, 128, 70]]
HOUSE_COLOR = [np.uint8(n) for n in [247, 114, 30, 128]]
OVERLAP_COLOR = [np.uint8(n) for n in [1, 1, 200, 200]]

# Fixed size in testing
IMAGE_SIZE = 800 if "unittest" in sys.argv[0] else int(os.environ["IMAGE_SIZE"])


# These limits were set by the in house subjects experts at Bolius
CONDUCTIVITY_LIMITS = {
    "low": 150,  # You have high risk if below this
    "medium": 350,  # You have medium risk if you are above low limit but below this
}
FASTNING_LIMITS = {
    "low": 45,  # Fastning degree below this means low risk
    "medium": 56,  # Fastning degree above low but below this gives medium risk
    # Higher than both gives high risk
}

STORM_FLOODING_PERCENTAGE_LIMIT = 0.10
STORM_FLOD_LIMITS = {  # Unit centimeters
    "low": 140,  # If flooded at this value risk is high
    "medium": 190  # If flooded at this value risk is medium
    # Else low risk
}


FASTNING_LABELS = np.array([100, 80, 70, 60, 50, 35, 20, 10, 5, 0])
# Generated by colormap on http://miljoegis.mim.dk/spatialmap?profile=miljoegis-klimatilpasningsplaner&layers=theme-gst-dtkskaerm_daempet
FASTNING_MAPPING = np.array(
    [
        np.array([196, 38, 7]),
        np.array([201, 39, 28]),
        np.array([209, 64, 49]),
        np.array([214, 93, 68]),
        np.array([222, 119, 91]),
        np.array([227, 144, 110]),
        np.array([235, 169, 136]),
        np.array([240, 192, 161]),
        np.array([247, 215, 188]),
        np.array([255, 235, 214]),
    ]
)

# Generated by colormap on http://miljoegis.mim.dk/spatialmap?profile=miljoegis-klimatilpasningsplaner&layers=theme-gst-dtkskaerm_daempet
CONDUCTIVITY_MAPPING = np.array(
    [
        np.array([12, 47, 122]),
        np.array([15, 66, 128]),
        np.array([17, 81, 130]),
        np.array([20, 101, 135]),
        np.array([23, 119, 140]),
        np.array([28, 139, 145]),
        np.array([31, 150, 141]),
        np.array([31, 161, 132]),
        np.array([27, 171, 118]),
        np.array([22, 181, 99]),
        np.array([16, 194, 79]),
        np.array([9, 204, 46]),
        np.array([4, 214, 13]),
        np.array([25, 222, 1]),
        np.array([62, 227, 2]),
        np.array([101, 232, 2]),
        np.array([144, 240, 0]),
        np.array([184, 245, 3]),
        np.array([229, 250, 0]),
        np.array([252, 244, 3]),
        np.array([250, 229, 7]),
        np.array([247, 212, 13]),
        np.array([245, 198, 13]),
        np.array([240, 180, 12]),
        np.array([237, 168, 19]),
        np.array([235, 156, 20]),
        np.array([227, 138, 30]),
        np.array([219, 122, 37]),
        np.array([214, 111, 44]),
        np.array([207, 99, 50]),
        np.array([199, 89, 56]),
    ]
)

CONDUCTIVITY_LABELS = np.array(
    [
        50,
        100,
        125,
        150,
        200,
        250,
        275,
        325,
        375,
        425,
        475,
        525,
        600,
        650,
        725,
        800,
        900,
        975,
        1075,
        1175,
        1300,
        1400,
        1550,
        1700,
        1850,
        2050,
        2200,
        2400,
        2650,
        2900,
        3350,
    ]
)
